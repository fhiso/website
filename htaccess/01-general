RewriteEngine on

### General rules for new tech.fhiso.org website
#
# This is where the logic to hide .php and .html suffixes lives

# Use 301 redirects for better SEO and caching, but don't cache forever!
Header always set Cache-Control "max-age=3600" env=limitcache

# Redirect everything to HTTPS.  Note that we don't do this when we're being
# proxied, because Simply Hosting's server apparently does not have mod_ssl.
# Note too that [OR] has higher precedent than mod_rewrite's implicit AND:
# see <https://stackoverflow.com/questions/922399>.
RewriteCond %{HTTPS} !=on
RewriteCond %{HTTP:X-Forwarded-Host} !=fhiso.org [NC]
RewriteCond %{REQUEST_METHOD} =GET [OR]
RewriteCond %{REQUEST_METHOD} =HEAD
RewriteRule ^(.*) https://%{SERVER_NAME}/$1  [L,R=301,E=limitcache:1]

# Redirect foo.html => foo if the html is now php
RewriteCond %{DOCUMENT_ROOT}/$1.php -f
RewriteRule ^(.*)\.html$ /$1 [L,R=301,E=limitcache:1]

# Redirect index => . to strip index from the end of URLs
RewriteRule ^(.*)/index$ /$1/ [L,R=301,E=limitcache:1]

# Redirect foo/ to foo if it's not a directory
RewriteCond %{DOCUMENT_ROOT}/$1 !-d
RewriteCond %{DOCUMENT_ROOT}/$1.html -f [OR]
RewriteCond %{DOCUMENT_ROOT}/$1.php -f
RewriteRule ^(.*)/$ /$1 [L,R=301,E=limitcache:1]

# Map foo => foo.html internally
RewriteCond %{DOCUMENT_ROOT}/$1.html -f
RewriteCond %{DOCUMENT_ROOT}/$1 !-d
RewriteRule ^(.*)$ /$1.html [L]

# Map foo => foo.php internally
RewriteCond %{DOCUMENT_ROOT}/$1.php -f
RewriteCond %{DOCUMENT_ROOT}/$1 !-d
RewriteRule ^(.*)$ /$1.php [L]

# Code to set %{ENV:scheme} to 'http' or 'https'
# See <https://stackoverflow.com/questions/19372594>.
RewriteCond %{HTTPS} =on
RewriteRule ^(.*)$ - [env=scheme:https]
RewriteCond %{HTTPS} !=on
RewriteRule ^(.*)$ - [env=scheme:http]
